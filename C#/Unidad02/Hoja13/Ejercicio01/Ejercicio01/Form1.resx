<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAfgoAAAJNU0Z0AUkBTAIBAQMB
        AAEgAQABIAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARD/
        AJsAA1IBqANVAb8DVQG/A1UBvwNVAb8DVQG/A1UBvwNVAb8DVQG/A1UBvwNVAb8DUgGo0AADVQG/Aw8B
        EwMPARMDDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETAw8BEwNVAb9MAAFAAWYBdwHgAQABbwGZAf8B
        AAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB/wEAAW8B
        mQH/AQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AUABZgF3AeAEAAE/AWgBdgHhAQABbwGZAf8BAAFvAZkB
        /wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AQAB
        bwGZAf8BAAFvAZkB/wEAAW8BmQH/ASoBawGBAe4DDQERDAADVQG/Aw8BEwMPARMDDwETAw8BEwMPARMD
        DwETAw8BEwMPARMDDwETAw8BEwNVAb9NAAFvAZkB/wMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkD
        EwEZAxMBGQMTARkDEwEZAxMBGQEAAW8BmQH/BQABbwGZAf8DRgF/AyoBQAMqAUADKgFAAyoBQAMqAUAD
        KgFAAyoBQAMqAUADKgFAAyoBQAMqAUABSgFiAWwB0wMzAVIMAANVAb8DDwETAw8BEwMPARMDDwETAw8B
        EwMPARMDDwETAw8BEwMPARMDDwETA1UBv00AAW8BmQH/AxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMB
        GQMTARkDEwEZAxMBGQMTARkDEwEZAQABbwGZAf8FAAFvAZkB/wFRAVkBXgG8AyoBQAMqAUADKgFAAyoB
        QAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUABUQFXAVgBsAFNAU8BUAGYDAADVQG/Aw8BEwMPARMD
        DwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETAw8BEwNVAb9NAAFvAZkB/wMTARkDEwEZAxMBGQMTARkD
        EwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQEAAW8BmQH/BQABbwGZAf8BJAFqAYQB8AMuAUgD
        KgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAkoBSwGJAUIBZgFyAd4MAANVAb8D
        DwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETA1UBv00AAW8BmQH/AxMBGQMTARkD
        EwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAQABbwGZAf8FAAFvAZkB/wFSAV0B
        YQG9AUYCRwGAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoCQAJBAXEBMgFnAXsB
        6gMYASEIAANVAb8DDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETA1UBv00AAW8B
        mQH/AxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAQABbwGZAf8F
        AAFvAZkB/wFAAkEBcAFSAV0BYQG9AyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoBQAMqAUADKgFAAyoC
        QAJBAXABUQFbAV4BuQE7AjwBZQgAA1UBvwMPARMDDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETAw8B
        EwMPARMDVQG/TQABbwGZAf8DEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMB
        GQMTARkBAAFvAZkB/wUAAW8BmQH/Ax0BKQEsAWoBgQHtAQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AQAB
        bwGZAf8BIwFrAYkB8gM/AWwDKgFAAyoBQAMqAUADKgJAAkEBcAJJAUoBiAFRAVcBWAGtCAADVQG/Aw8B
        EwMPARMDDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETAw8BEwNVAb9NAAFvAZkB/wMTARkDEwEZAxMB
        GQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQEAAW8BmQH/BQABbwGZAf8DEwEZAxMB
        GQMTARkDEwEZAxMBGQMTARkDNgFXAR0BaAGKAfQBAAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB
        /wEAAW8BmQH/AQABbwGZAf8BUQFZAV4BvAgAA1UBvwMPARMDDwETAw8BEwMPARMDDwETAw8BEwMPARMD
        DwETAw8BEwMPARMDVQG/TQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB/wEAAW8B
        mQH/ASQBbwGFAfEDMQFOAxMBGQMTARkDEwEZAxMBGQMTARkBAAFvAZkB/wUAAW8BmQH/AxMBGQMTARkD
        EwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAxMBGQMTARkDEwEZAQABbwGZAf8QAANVAb8DDwETAw8B
        EwMPARMDDwETAw8BEwMPARMDDwETA1UBvwNVAb8DVQG/A1QBtU0AAW8BmQH/AxMBGQMTARkDEwEZAxMB
        GQMTARkDSAGEAQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BAAFvAZkB/wEAAW8BmQH/AUAB
        ZgF3AeAFAAFvAZkB/wMTARkDEwEZAxMBGQMTARkDNAFTASMBawGJAfIBAAFvAZkB/wEAAW8BmQH/AQAB
        bwGZAf8BAAFvAZkB/wEAAW8BmQH/AQABbwGZAf8BQAFmAXcB4BAAA1UBvwMPARMDDwETAw8BEwMPARMD
        DwETAw8BEwMPARMDVQG/A1UBvwNUAbgDIgExTAABQAFmAXcB4AEAAW8BmQH/AQABbwGZAf8BAAFvAZkB
        /wEAAW8BmQH/AQABbwGZAf8BJAFvAYYB8QMqAUAcAAFAAWYBdwHgAQABbwGZAf8BAAFvAZkB/wEAAW8B
        mQH/AQABbwGZAf8BJAFvAYYB8QMqAUAsAANVAb8DDwETAw8BEwMPARMDDwETAw8BEwMPARMDDwETA1UB
        vwNUAbgDIgEx1AADUgGoA1UBvwNVAb8DVQG/A1UBvwNVAb8DVQG/A1UBvwNUAbUDIQEw/wBRAAFCAU0B
        PgcAAT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAG/wIABP8BwAEDAgAE/wHAAQMCAAGAAQEB
        AAEBAcABAwIAAYABAQEAAQEBwAEDAgABgAEBAQABAQHAAQMCAAGAAQEBAAEBAcABAwIAAYABAQIAAcAB
        AwIAAYABAQIAAcABAwIAAYABAQIAAcABAwIAAYABAQIAAcABAwIAAYABAQEAAQMBwAEDAgABgAEBAQAB
        AwHAAQMCAAGAAX8BAQH/AcABBwIABP8BwAEPAgAG/wIACw==
</value>
  </data>
</root>